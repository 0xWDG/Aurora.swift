// Aurora framework for Swift
//
// The **Aurora.framework** contains a base for your project.
//
// It has a lot of extensions built-in to make development easier.
//
// - Version: 1.0
// - Copyright: [Wesley de Groot](https://wesleydegroot.nl) ([WDGWV](https://wdgwv.com))\
//  and [Contributors](https://github.com/AuroraFramework/Aurora.swift/graphs/contributors).
//
// Thanks for using!
//
// Licence: MIT

#if canImport(UIKit)
import Foundation
import UIKit

extension Aurora {
    /// Aurora logviewer class
    ///
    /// View the logs used/generated by Aurora.Framework
    public class LogView: UIViewController, UITableViewDelegate, UITableViewDataSource {
        /// Log messages
        var logMessages = Aurora.shared.getLogMessages()

        /// The tableview
        var tableView: UITableView = UITableView()

        /// View did load
        override public func viewDidLoad() {
            logMessages.append("END OF REPORT\r\n\r\n")
            logMessages.append("AuroraExitLogViewButton")

            /// Setup UITableView
            tableView = UITableView().configure { [self] in
                $0.frame = UIApplication.shared.key.unwrap(
                    orError: "Failed to get key window"
                ).frame
                $0.delegate = self
                $0.dataSource = self
                $0.rowHeight = UITableView.automaticDimension
                $0.estimatedRowHeight = 85
            }

            view.addSubview(tableView)

            super.viewDidLoad()

            Aurora.shared.execute(after: 0.5) { [self] in
                let indexPath: IndexPath = NSIndexPath(row: self.logMessages.count - 1, section: 0) as IndexPath
                tableView.scrollToRow(at: indexPath, at: .top, animated: true)
            }

            Aurora.shared.execute(after: 10) {
                self.reloadLogView()
            }
        }

        /// reloads the logview
        private func reloadLogView() {
            logMessages = Aurora.shared.getLogMessages()
            logMessages.append("END OF REPORT\r\n\r\n")
            logMessages.append("AuroraExitLogViewButton")

            self.tableView.reloadData()

            Aurora.shared.execute(after: 10) {
                self.reloadLogView()
            }
        }

        public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
            return logMessages.count
        }

        public func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
            if logMessages[indexPath.row] == "AuroraExitLogViewButton" {
                self.dismiss(animated: true, completion: nil)
            } else {
#if !os(tvOS)
                UIPasteboard.general.string = logMessages[indexPath.row]
#endif
            }
        }

        public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
            return UITableViewCell.init().configure {
                if logMessages[indexPath.row] != "AuroraExitLogViewButton" {
                    $0.textLabel?.text = logMessages[indexPath.row]
                } else {
                    $0.textLabel?.text = NSLocalizedString(
                        "Aurora.general.close",
                        bundle: Bundle.module,
                        comment: "Aurora.general.close"
                    ) + "\n\n\n"
                    $0.textLabel?.textAlignment = .center
                }

                $0.textLabel?.numberOfLines = 0
                $0.textLabel?.lineBreakMode = .byWordWrapping
                $0.textLabel?.sizeToFit()
            }
        }
    }
}
#endif
